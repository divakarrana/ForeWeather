{"version":3,"sources":["components/Cards/cards.module.css","components/Header/header.js","components/Cards/cards.js","App.js","reportWebVitals.js","index.js","components/Header/header.module.css"],"names":["module","exports","header","className","styles","Header","logoBox","appHeading","subHeading","cards","props","allCards","weatherData","map","dayWeather","dt_txt","Date","toDateString","card","data-testid","cardHead","cardHeadTemp","main","temp","cardHeadDate","cardHeadHumidity","humidity","cardContent","weatherStats","weather","el","join","windStats","wind","speed","pop","pressure","container","App","useState","setweatherData","useEffect","fetch","process","then","response","json","data","filterDays","list","catch","error","console","log","message","weatherInfo","prevDate","filter","currDate","split","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,aAAe,4BAA4B,aAAe,4BAA4B,iBAAmB,gCAAgC,YAAc,6B,sICW7PC,EATA,WACX,OACI,sBAAKC,UAAWC,IAAOC,OAAvB,UACI,qBAAKF,UAAWC,IAAOE,QAAvB,SAAgC,mBAAGH,UAAU,kBAC7C,qBAAIA,UAAWC,IAAOG,WAAtB,8BAAqD,sBAAMJ,UAAWC,IAAOI,WAAxB,sD,gBC2ClDC,EA/CD,SAACC,GAGX,IAAIC,EAAY,wBAqChB,OAlCGD,EAAME,cACLD,EAAWD,EAAME,YAAYC,KAAK,SAAAC,GAM9B,OAHAA,EAAWC,OAAU,IAAIC,KAAKF,EAAWC,QAAQE,eAI7C,sBAAKd,UAAWC,IAAOc,KAA8BC,cAAY,OAAjE,UACI,sBAAKhB,UAAWC,IAAOgB,SAAvB,UACI,sBAAKjB,UAAWC,IAAOiB,aAAvB,UAAsCP,EAAWQ,KAAKC,KAAtD,UACA,qBAAKpB,UAAWC,IAAOoB,aAAvB,SAAsCV,EAAWC,SACjD,sBAAKZ,UAAWC,IAAOqB,iBAAvB,UAAyC,mBAAGtB,UAAU,gBAAmBW,EAAWQ,KAAKI,SAAzF,gBAEJ,sBAAKvB,UAAWC,IAAOuB,YAAvB,UACI,sBAAKxB,UAAWC,IAAOwB,aAAvB,UACI,mBAAGzB,UAAU,qBADjB,eACuDW,EAAWe,QAAQhB,KAAI,SAAAiB,GAAE,OAAIA,EAAGR,QAAMS,KAAK,QAElG,sBAAK5B,UAAWC,IAAO4B,UAAvB,UACI,mBAAG7B,UAAU,gBADjB,YAC+CW,EAAWmB,KAAKC,MAD/D,UAGA,sBAAK/B,UAAWC,IAAO+B,IAAvB,UACI,mBAAGhC,UAAU,sBADjB,qBAC8DW,EAAWqB,IADzE,OAGA,sBAAKhC,UAAWC,IAAO+B,IAAvB,UACI,mBAAGhC,UAAU,0BADjB,gBAC6DW,EAAWQ,KAAKc,SAD7E,cAhB0BtB,EAAWC,YA2BrD,qBAAKZ,UAAWC,IAAOiC,UAAvB,SACK1B,KCJE2B,MAnCf,WAAe,MAEyBC,qBAFzB,mBAEN3B,EAFM,KAEO4B,EAFP,KAKbC,qBAAU,WACRC,MAAM,iFAAD,OAAkFC,qCACpFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUP,EAAeQ,EAAWD,EAAKE,UAC9CC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAMG,cACrC,IAGH,IAAMN,EAAa,SAACO,GAClB,IAAIC,EAAW,GACf,OAAOD,EAAYE,QAAQ,SAAA5B,GACzB,IAAI6B,EAAW7B,EAAQd,OAAO4C,MAAM,KAAK,GACzC,OAAGD,IAAaF,IAGhBA,EAAWE,GACJ,OAKX,OACE,sBAAKvD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOS,YAAaA,QCvBXgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfA5D,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,WAAa,2BAA2B,WAAa,8B","file":"static/js/main.d772ab0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__3Op9X\",\"card\":\"cards_card__1bTKH\",\"cardHead\":\"cards_cardHead__1Ii6h\",\"cardHeadTemp\":\"cards_cardHeadTemp__yoRO7\",\"cardHeadDate\":\"cards_cardHeadDate__2rN2Z\",\"cardHeadHumidity\":\"cards_cardHeadHumidity__RELoQ\",\"cardContent\":\"cards_cardContent__Hha6l\"};","import React from 'react';\r\nimport styles from './header.module.css';\r\n\r\nconst header = () => {\r\n    return (\r\n        <div className={styles.Header}>\r\n            <div className={styles.logoBox}><i className=\"fas fa-smog\"></i></div> \r\n            <h1 className={styles.appHeading}>Fore-Weather &nbsp;<span className={styles.subHeading}>5 day weather forecast for Mumbai</span></h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default header;\r\n","import React from 'react'\r\nimport styles from './cards.module.css';\r\n\r\nconst cards = (props) => {\r\n\r\n    //Waiting for the API response\r\n    let allCards = (<div></div>);\r\n\r\n    //Successful API response results\r\n    if(props.weatherData){\r\n        allCards = props.weatherData.map( dayWeather => {\r\n\r\n            //Formatting date \r\n            dayWeather.dt_txt =  new Date(dayWeather.dt_txt).toDateString();\r\n\r\n            //Preparing JSX of cards with data\r\n            return(\r\n                <div className={styles.card} key={dayWeather.dt_txt} data-testid=\"card\">\r\n                    <div className={styles.cardHead}>\r\n                        <div className={styles.cardHeadTemp}>{dayWeather.main.temp}&#176;</div>\r\n                        <div className={styles.cardHeadDate}>{dayWeather.dt_txt}</div>\r\n                        <div className={styles.cardHeadHumidity}><i className=\"fas fa-tint\"></i>{dayWeather.main.humidity}% Humid</div>\r\n                    </div>\r\n                    <div className={styles.cardContent}>\r\n                        <div className={styles.weatherStats}>\r\n                            <i className=\"fas fa-cloud-sun\"></i>Weather:&nbsp;{dayWeather.weather.map(el => el.main).join(\",\")}\r\n                        </div>\r\n                        <div className={styles.windStats}>\r\n                            <i className=\"fas fa-wind\"></i>Wind:&nbsp;{dayWeather.wind.speed}km/h\r\n                        </div>\r\n                        <div className={styles.pop}>\r\n                            <i className=\"fas fa-cloud-rain\"></i>Precipitation:&nbsp;{dayWeather.pop}%\r\n                        </div>\r\n                        <div className={styles.pop}>\r\n                            <i className=\"fas fa-tachometer-alt\"></i>Pressure:&nbsp;{dayWeather.main.pressure}hPa\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                );\r\n        });\r\n    }\r\n\r\n    //Rendering Cards\r\n    return (\r\n        <div className={styles.container}>\r\n            {allCards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default cards;\r\n","import React, {useState, useEffect} from 'react';\n\nimport Header from './components/Header/header';\nimport Cards from './components/Cards/cards';\n\n\nfunction App() {\n  //Defining initial state to store weather data\n  const [weatherData, setweatherData] = useState();\n\n  //Fetching weather data from API and mapping to state\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?id=1275339&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\n      .then((response) => response.json())  \n      .then((data) => setweatherData(filterDays(data.list)))\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  //Filtering day-wise data\n  const filterDays = (weatherInfo) => {\n    let prevDate = '';\n    return weatherInfo.filter( weather => {\n      let currDate = weather.dt_txt.split(\" \")[0];\n      if(currDate === prevDate){\n        return false;\n      }\n      prevDate = currDate;\n      return true;\n    });\n  }\n\n  //Rendering root component and children\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Cards weatherData={weatherData}></Cards>\n    </div>\n     \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"header_Header__QJPmF\",\"logoBox\":\"header_logoBox__1pTAS\",\"appHeading\":\"header_appHeading__3GPSj\",\"subHeading\":\"header_subHeading__Ie5Pq\"};"],"sourceRoot":""}